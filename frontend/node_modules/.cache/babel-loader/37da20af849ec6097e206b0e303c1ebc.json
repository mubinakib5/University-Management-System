{"ast":null,"code":"var _jsxFileName = \"D:\\\\Website\\\\sms\\\\frontend\\\\src\\\\components\\\\TableViewTemplate.js\";\nimport React, { useState } from 'react';\nimport { StyledTableCell, StyledTableRow } from './styles';\nimport { Table, TableBody, TableContainer, TableHead, TablePagination } from '@mui/material';\nconst TableViewTemplate = ({\n  columns,\n  rows\n}) => {\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(StyledTableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 25\n    }\n  }, columns.map((column, index) => /*#__PURE__*/React.createElement(StyledTableCell, {\n    key: index,\n    align: column.align,\n    style: {\n      minWidth: column.minWidth\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 33\n    }\n  }, column.label)))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n    return /*#__PURE__*/React.createElement(StyledTableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: row.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 37\n      }\n    }, columns.map((column, index) => {\n      const value = row[column.id];\n      return /*#__PURE__*/React.createElement(StyledTableCell, {\n        key: index,\n        align: column.align,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 49\n        }\n      }, column.format && typeof value === 'number' ? column.format(value) : value);\n    }));\n  })))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25, 100],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onPageChange: (event, newPage) => setPage(newPage),\n    onRowsPerPageChange: event => {\n      setRowsPerPage(parseInt(event.target.value, 5));\n      setPage(0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }));\n};\nexport default TableViewTemplate;","map":{"version":3,"names":["React","useState","StyledTableCell","StyledTableRow","Table","TableBody","TableContainer","TableHead","TablePagination","TableViewTemplate","columns","rows","page","setPage","rowsPerPage","setRowsPerPage","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","stickyHeader","map","column","index","key","align","style","minWidth","label","slice","row","hover","role","tabIndex","id","value","format","rowsPerPageOptions","component","count","length","onPageChange","event","newPage","onRowsPerPageChange","parseInt","target"],"sources":["D:/Website/sms/frontend/src/components/TableViewTemplate.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { StyledTableCell, StyledTableRow } from './styles';\r\nimport { Table, TableBody, TableContainer, TableHead, TablePagination } from '@mui/material';\r\n\r\nconst TableViewTemplate = ({ columns, rows }) => {\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n    return (\r\n        <>\r\n            <TableContainer>\r\n                <Table stickyHeader aria-label=\"sticky table\">\r\n                    <TableHead>\r\n                        <StyledTableRow>\r\n                            {columns.map((column, index) => (\r\n                                <StyledTableCell\r\n                                    key={index}\r\n                                    align={column.align}\r\n                                    style={{ minWidth: column.minWidth }}\r\n                                >\r\n                                    {column.label}\r\n                                </StyledTableCell>\r\n                            ))}\r\n                        </StyledTableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows\r\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                            .map((row) => {\r\n                                return (\r\n                                    <StyledTableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                                        {columns.map((column, index) => {\r\n                                            const value = row[column.id];\r\n                                            return (\r\n                                                <StyledTableCell key={index} align={column.align}>\r\n                                                    {\r\n                                                        column.format && typeof value === 'number'\r\n                                                            ? column.format(value)\r\n                                                            : value\r\n                                                    }\r\n                                                </StyledTableCell>\r\n                                            );\r\n                                        })}\r\n                                    </StyledTableRow>\r\n                                );\r\n                            })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25, 100]}\r\n                component=\"div\"\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onPageChange={(event, newPage) => setPage(newPage)}\r\n                onRowsPerPageChange={(event) => {\r\n                    setRowsPerPage(parseInt(event.target.value, 5));\r\n                    setPage(0);\r\n                }}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TableViewTemplate"],"mappings":"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"},"metadata":{},"sourceType":"module"}